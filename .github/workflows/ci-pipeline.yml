name: Build and Deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-api:
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v2

      - name: Install Api dependencies
        run: dotnet restore "src/api/Api.csproj"

      - name: Build Api project
        run: dotnet build "src/api/Api.csproj" --configuration Release --no-restore

      - name: Create Api release artifacts
        run: dotnet publish "src/api/Api.csproj" --configuration Release --no-restore --no-build --output dist

      - shell: pwsh
        name: Zip Api release artifacts
        run: Compress-Archive -Path dist/* -DestinationPath dist/api.zip

      - name: Upload Api zipped artifacts
        uses: actions/upload-artifact@v2.2.1
        with:
          name: api.zip
          path: dist
          if-no-files-found: error
          retention-days: 90

  deploy-api:
    runs-on: ubuntu-18.04
    needs: [build-api]

    steps:
      - name: Download Api artifacts
        uses: actions/download-artifact@v2.0.6
        with:
          name: api.zip
          path: artifacts

      - shell: bash
        name: Login to Azure
        env:
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        run: |
          az login --service-principal --username $AZURE_CLIENT_ID --password $AZURE_CLIENT_SECRET --tenant $AZURE_TENANT_ID

      - shell: bash
        name: Deploy Api to Azure
        run: |
          az webapp deployment source config-zip -g djr-rg-dexframe -n dexframeapi --src artifacts/api.zip

  build-web-client:
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v2

      - name: Build WebClient JS project
        run: cd src/web-client && yarn build:prod

      - name: Install WebClient C# dependencies
        run: dotnet restore "src/web-client/WebClient.csproj"

      - name: Build WebClient C# project
        run: dotnet build "src/web-client/WebClient.csproj" --configuration Release --no-restore

      - name: Create WebClient release artifacts
        run: dotnet publish "src/web-client/WebClient.csproj" --configuration Release --no-restore --no-build --output dist

      - shell: pwsh
        name: Zip WebClient release artifacts
        run: Compress-Archive -Path dist/* -DestinationPath dist/webclient.zip

      - name: Upload WebClient zipped artifacts
        uses: actions/upload-artifact@v2.2.1
        with:
          name: webclient.zip
          path: dist/
          if-no-files-found: error
          retention-days: 90

  deploy-web-client:
    runs-on: ubuntu-18.04
    needs: [build-web-client]

    steps:
      - name: Download WebClient artifacts
        uses: actions/download-artifact@v2.0.6
        with:
          name: webclient.zip
          path: artifacts

      - shell: bash
        name: Login to Azure
        env:
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        run: |
          az login --service-principal --username $AZURE_CLIENT_ID --password $AZURE_CLIENT_SECRET --tenant $AZURE_TENANT_ID

      - shell: bash
        name: Deploy WebClient to Azure
        run: |
          az webapp deployment source config-zip -g djr-rg-dexframe -n dexframe --src artifacts/webclient.zip

  update-db:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Set .NET Core SDK version
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.301

      - name: Update Database
        working-directory: 'src/app-data'
        env:
          DbConnectionString: ${{ secrets.AZURE_DB_CONNECTION_STRING }}
        run: dotnet run

  build-identity-server:
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v2
      - name: Set .NET Core SDK version
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.301

      - name: Install IdentityServer dependencies
        run: dotnet restore "src/identity-server/IdentityServer.csproj"

      - name: Build IdentityServer C# project
        run: dotnet build "src/identity-server/IdentityServer.csproj" --configuration Release --no-restore

      - name: Create IdentityServer release artifacts
        run: dotnet publish "src/identity-server/IdentityServer.csproj" --configuration Release --no-restore --no-build --output dist

      - shell: pwsh
        name: Zip IdentityServer release artifacts
        run: Compress-Archive -Path dist/* -DestinationPath dist/identityserver.zip

      - name: Upload IdentityServer zipped artifacts
        uses: actions/upload-artifact@v2.2.1
        with:
          name: identityserver.zip
          path: dist/
          if-no-files-found: error
          retention-days: 90

  deploy-identity-server:
    runs-on: ubuntu-18.04
    needs: [build-identity-server]

    steps:
      - name: Download IdentityServer artifacts
        uses: actions/download-artifact@v2.0.6
        with:
          name: identityserver.zip
          path: artifacts

      - shell: bash
        name: Login to Azure
        env:
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        run: |
          az login --service-principal --username $AZURE_CLIENT_ID --password $AZURE_CLIENT_SECRET --tenant $AZURE_TENANT_ID

      - shell: bash
        name: Deploy WebClient to Azure
        run: |
          az webapp deployment source config-zip -g djr-rg-dexframe -n dexframeidentity --src artifacts/identityserver.zip
