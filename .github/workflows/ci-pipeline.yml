name: Build and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-api:
    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v2
    - name: Set .NET Core SDK version
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.301

    - name: Install Api dependencies
      run: dotnet restore "src/api/Api.csproj"

    - name: Build Api project
      run: dotnet build "src/api/Api.csproj" --configuration Release --no-restore

    - name: Create Api release artifacts
      run: dotnet publish "src/api/Api.csproj" --configuration Release --no-restore --no-build --output dist
      
    - name: Upload Api artifacts
      uses: actions/upload-artifact@v2.2.1
      with:
        name: api
        path: dist
        if-no-files-found: error
        retention-days: 90
        
  deploy-api:
    runs-on: ubuntu-18.04
    needs: [build-api]
    
    steps:
      - name: Download a Build Artifact
        uses: actions/download-artifact@v2.0.6
        with:
          name: api
          path: /artifacts
          
      - shell: bash
        name: Login to Azure
        env:
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        run: |
          az login --service-principal --username $AZURE_CLIENT_ID --password $AZURE_CLIENT_SECRET --tenant $AZURE_TENANT_ID

      - shell: bash
        name: Deploy to Api to Azure
        run: |
          az webapp deployment source config-zip -g djr-rg-frame-dex -n framedex --src /artifacts/api.zip
